/*
 * This file is generated by jOOQ.
 */
package com.rulerbug.zoo.tables.records;


import com.rulerbug.zoo.tables.Books;
import com.rulerbug.zoo.tables.interfaces.IBooks;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BooksRecord extends UpdatableRecordImpl<BooksRecord> implements Record5<Long, String, String, LocalDateTime, LocalDateTime>, IBooks {

    private static final long serialVersionUID = -81608691;

    /**
     * Setter for <code>mypages.books.id</code>. 书ID
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>mypages.books.id</code>. 书ID
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>mypages.books.bookName</code>. 书名
     */
    @Override
    public void setBookname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>mypages.books.bookName</code>. 书名
     */
    @Override
    public String getBookname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>mypages.books.author</code>. 作者
     */
    @Override
    public void setAuthor(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>mypages.books.author</code>. 作者
     */
    @Override
    public String getAuthor() {
        return (String) get(2);
    }

    /**
     * Setter for <code>mypages.books.createTime</code>. 开始创作时间
     */
    @Override
    public void setCreatetime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>mypages.books.createTime</code>. 开始创作时间
     */
    @Override
    public LocalDateTime getCreatetime() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>mypages.books.changeTime</code>. 最后一次修改时间
     */
    @Override
    public void setChangetime(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>mypages.books.changeTime</code>. 最后一次修改时间
     */
    @Override
    public LocalDateTime getChangetime() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Books.BOOKS.ID;
    }

    @Override
    public Field<String> field2() {
        return Books.BOOKS.BOOKNAME;
    }

    @Override
    public Field<String> field3() {
        return Books.BOOKS.AUTHOR;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Books.BOOKS.CREATETIME;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Books.BOOKS.CHANGETIME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getBookname();
    }

    @Override
    public String component3() {
        return getAuthor();
    }

    @Override
    public LocalDateTime component4() {
        return getCreatetime();
    }

    @Override
    public LocalDateTime component5() {
        return getChangetime();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getBookname();
    }

    @Override
    public String value3() {
        return getAuthor();
    }

    @Override
    public LocalDateTime value4() {
        return getCreatetime();
    }

    @Override
    public LocalDateTime value5() {
        return getChangetime();
    }

    @Override
    public BooksRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public BooksRecord value2(String value) {
        setBookname(value);
        return this;
    }

    @Override
    public BooksRecord value3(String value) {
        setAuthor(value);
        return this;
    }

    @Override
    public BooksRecord value4(LocalDateTime value) {
        setCreatetime(value);
        return this;
    }

    @Override
    public BooksRecord value5(LocalDateTime value) {
        setChangetime(value);
        return this;
    }

    @Override
    public BooksRecord values(Long value1, String value2, String value3, LocalDateTime value4, LocalDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IBooks from) {
        setId(from.getId());
        setBookname(from.getBookname());
        setAuthor(from.getAuthor());
        setCreatetime(from.getCreatetime());
        setChangetime(from.getChangetime());
    }

    @Override
    public <E extends IBooks> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BooksRecord
     */
    public BooksRecord() {
        super(Books.BOOKS);
    }

    /**
     * Create a detached, initialised BooksRecord
     */
    public BooksRecord(Long id, String bookname, String author, LocalDateTime createtime, LocalDateTime changetime) {
        super(Books.BOOKS);

        set(0, id);
        set(1, bookname);
        set(2, author);
        set(3, createtime);
        set(4, changetime);
    }
}
