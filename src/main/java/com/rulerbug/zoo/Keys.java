/*
 * This file is generated by jOOQ.
 */
package com.rulerbug.zoo;


import com.rulerbug.zoo.tables.Allbooks;
import com.rulerbug.zoo.tables.Pages;
import com.rulerbug.zoo.tables.records.AllbooksRecord;
import com.rulerbug.zoo.tables.records.PagesRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>mypages</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AllbooksRecord, Long> IDENTITY_ALLBOOKS = Identities0.IDENTITY_ALLBOOKS;
    public static final Identity<PagesRecord, Long> IDENTITY_PAGES = Identities0.IDENTITY_PAGES;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AllbooksRecord> KEY_ALLBOOKS_PRIMARY = UniqueKeys0.KEY_ALLBOOKS_PRIMARY;
    public static final UniqueKey<PagesRecord> KEY_PAGES_PRIMARY = UniqueKeys0.KEY_PAGES_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<AllbooksRecord, Long> IDENTITY_ALLBOOKS = Internal.createIdentity(Allbooks.ALLBOOKS, Allbooks.ALLBOOKS.ID);
        public static Identity<PagesRecord, Long> IDENTITY_PAGES = Internal.createIdentity(Pages.PAGES, Pages.PAGES.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AllbooksRecord> KEY_ALLBOOKS_PRIMARY = Internal.createUniqueKey(Allbooks.ALLBOOKS, "KEY_allBooks_PRIMARY", Allbooks.ALLBOOKS.ID);
        public static final UniqueKey<PagesRecord> KEY_PAGES_PRIMARY = Internal.createUniqueKey(Pages.PAGES, "KEY_pages_PRIMARY", Pages.PAGES.ID);
    }
}
